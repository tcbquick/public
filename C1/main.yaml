---
- name: Docker Swarm Deployment Playbook
  hosts: docker_swarm_nodes
  become: yes
  vars:
    docker_service_state: started

  pre_tasks:
    - name: Ensure Docker is installed
      package:
        name: docker.io
        state: present
      register: docker_installation

    - name: Ensure Docker service is enabled and running
      service:
        name: docker
        state: "{{ docker_service_state }}"
        enabled: true
      register: docker_service_status

    - name: Verify Docker is reachable
      command: docker info
      register: docker_info
      failed_when: docker_info.rc != 0
      changed_when: false

    - name: Display Docker environment validation summary
      debug:
        msg:
          - "Docker Installation: {{ 'Changed' if docker_installation.changed else 'Already installed' }}"
          - "Docker Service Status: {{ docker_service_status.state }}"
          - "Docker Info Command Output Successful."

  tasks:
    - name: Deploy Docker Swarm services
      command: docker stack deploy -c docker-compose.yml my_stack
      args:
        chdir: /home/ansible/docker_swarm/deployment
      register: deploy_result

    - name: Confirm Docker Swarm service deployment
      debug:
        msg: "{{ deploy_result.stdout }}"


---
- name: Main Playbook Using Includes
  hosts: all
  become: yes

  tasks:
    - name: Include install tasks (static parse time)
      import_tasks: C1/Imports/roles/tasks/install_packages.yml

    - name: Include configuration tasks (static parse time)
      import_tasks: C1/Imports/roles/tasks/configure_service.yml

    - name: Include service start tasks (static parse time)
      import_tasks: C1/Imports/roles/tasks/start_service.yml

???


- name: Deploy Web Server Role
  hosts: all
  become: yes
  vars:
    web_server: nginx         # Or apache
    enable_firewall: true

  roles:
    - webserver

???

- name: Include a task file for each item
  include_tasks: "{{ item }}"
  loop:
    - install_nginx.yml
    - configure_firewall.yml



